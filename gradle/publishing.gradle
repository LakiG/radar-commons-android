apply plugin: 'maven-publish'
apply plugin: 'digital.wup.android-maven-publish'
//apply plugin: 'org.jetbrains.dokka-android'

ext.sharedManifest = manifest {
    attributes("Implementation-Title": name,
            "Implementation-Version": version)
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    manifest.from sharedManifest
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
    exclude '**/*.kt'
}

//dokka {
//    outputFormat = 'html'
//    outputDirectory = javadoc.destinationDir
//}

//task javadocJar(type: Jar, dependsOn: [dokka, javadoc]) {
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
    manifest.from sharedManifest
}

publishing {
    publications {
        mavenAar(MavenPublication) {
            from components.android
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = project.description
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'blootsvoets'
                        name = 'Joris Borgdorff'
                        email = 'joris@thehyve.nl'
                        organization = 'The Hyve'
                    }
                }
                issueManagement {
                    system = 'GitHub'
                    url = githubUrl + '/issues'
                }
                organization {
                    name = 'RADAR-base'
                    url = website
                }
                scm {
                    connection = 'scm:git:' + githubUrl
                    url = githubUrl
                }
            }
        }
    }
}
