apply plugin: 'maven-publish'
apply plugin: "org.jetbrains.dokka"

ext.sharedManifest = manifest {
    attributes("Implementation-Title": name,
            "Implementation-Version": version)
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    manifest.from sharedManifest
}

dokkaJavadoc.configure {
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from dokkaJavadoc.outputDirectory
    manifest.from sharedManifest
}

ext.nexusRepoBase = 'https://repo.thehyve.nl/content/repositories'

publishing {
    publications {
        mavenAar(MavenPublication) {
            afterEvaluate {
                from components.release
            }
            artifact sourcesJar
            artifact javadocJar

            pom {
                description = project.description
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'blootsvoets'
                        name = 'Joris Borgdorff'
                        email = 'joris@thehyve.nl'
                        organization = 'The Hyve'
                    }
                }
                issueManagement {
                    system = 'GitHub'
                    url = githubUrl + '/issues'
                }
                organization {
                    name = 'RADAR-base'
                    url = website
                }
                scm {
                    connection = 'scm:git:' + githubUrl
                    url = githubUrl
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "$nexusRepoBase/releases"
            def snapshotsRepoUrl = "$nexusRepoBase/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.hasProperty('nexusUser') ? project.property('nexusUser') : System.getenv('NEXUS_USER')
                password = project.hasProperty('nexusPassword') ? project.property('nexusPassword') : System.getenv('NEXUS_PASSWORD')
            }
        }
    }
}
